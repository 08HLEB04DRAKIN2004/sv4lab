{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios';\nexport const createOrder = createAsyncThunk('orders/createOrder', async orderData => {\n  const {\n    data\n  } = await axios.post('/orders/create', orderData);\n  return data;\n});\nexport const deleteOrder = createAsyncThunk('orders/deleteOrder', async id => {\n  await axios.delete(`/orders/${id}/delete`);\n  return id;\n});\nexport const updateOrder = createAsyncThunk('orders/updateOrder', async ({\n  id,\n  updatedData\n}) => {\n  const {\n    data\n  } = await axios.patch(`/orders/${id}/update`, updatedData);\n  return data;\n});\nexport const fetchOrderById = createAsyncThunk('orders/fetchOrderById', async id => {\n  const {\n    data\n  } = await axios.get(`/orders/${id}`);\n  return data;\n});\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async () => {\n  const {\n    data\n  } = await axios.get('/orders');\n  return data;\n});\nconst initialState = {\n  orders: [],\n  currentOrder: null,\n  status: 'idle',\n  error: null\n};\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createOrder.pending, state => {\n      state.status = 'loading';\n    }).addCase(createOrder.fulfilled, (state, action) => {\n      state.orders.push(action.payload);\n      state.status = 'succeeded';\n    }).addCase(createOrder.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(deleteOrder.fulfilled, (state, action) => {\n      state.orders = state.orders.filter(order => order._id !== action.payload);\n      state.status = 'succeeded';\n    }).addCase(updateOrder.fulfilled, (state, action) => {\n      const index = state.orders.findIndex(order => order._id === action.payload._id);\n      if (index !== -1) {\n        state.orders[index] = action.payload;\n      }\n      state.status = 'succeeded';\n    }).addCase(fetchOrderById.pending, state => {\n      state.currentOrder = null;\n      state.status = 'loading';\n    }).addCase(fetchOrderById.fulfilled, (state, action) => {\n      state.currentOrder = action.payload;\n      state.status = 'succeeded';\n    }).addCase(fetchOrderById.rejected, (state, action) => {\n      state.currentOrder = null;\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchOrders.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchOrders.fulfilled, (state, action) => {\n      state.orders = action.payload;\n      state.status = 'succeeded';\n    }).addCase(fetchOrders.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const ordersReducer = ordersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createOrder","orderData","data","post","deleteOrder","id","delete","updateOrder","updatedData","patch","fetchOrderById","get","fetchOrders","initialState","orders","currentOrder","status","error","ordersSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","message","filter","order","_id","index","findIndex","ordersReducer","reducer"],"sources":["C:/Users/g_dra/Desktop/razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania/client/carservice/src/redux/slices/orders.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from '../axios';\r\n\r\nexport const createOrder = createAsyncThunk('orders/createOrder', async (orderData) => {\r\n    const { data } = await axios.post('/orders/create', orderData);\r\n    return data;\r\n});\r\n\r\nexport const deleteOrder = createAsyncThunk('orders/deleteOrder', async (id) => {\r\n    await axios.delete(`/orders/${id}/delete`);\r\n    return id;\r\n});\r\n\r\nexport const updateOrder = createAsyncThunk('orders/updateOrder', async ({ id, updatedData }) => {\r\n    const { data } = await axios.patch(`/orders/${id}/update`, updatedData);\r\n    return data;\r\n});\r\n\r\nexport const fetchOrderById = createAsyncThunk('orders/fetchOrderById', async (id) => {\r\n    const { data } = await axios.get(`/orders/${id}`);\r\n    return data;\r\n});\r\n\r\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async () => {\r\n    const { data } = await axios.get('/orders');\r\n    return data;\r\n});\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    currentOrder: null,\r\n    status: 'idle',\r\n    error: null\r\n};\r\n\r\nconst ordersSlice = createSlice({\r\n    name: 'orders',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(createOrder.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(createOrder.fulfilled, (state, action) => {\r\n                state.orders.push(action.payload);\r\n                state.status = 'succeeded';\r\n            })\r\n            .addCase(createOrder.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(deleteOrder.fulfilled, (state, action) => {\r\n                state.orders = state.orders.filter(order => order._id !== action.payload);\r\n                state.status = 'succeeded';\r\n            })\r\n\r\n            .addCase(updateOrder.fulfilled, (state, action) => {\r\n                const index = state.orders.findIndex(order => order._id === action.payload._id);\r\n                if (index !== -1) {\r\n                    state.orders[index] = action.payload;\r\n                }\r\n                state.status = 'succeeded';\r\n            })\r\n\r\n            .addCase(fetchOrderById.pending, (state) => {\r\n                state.currentOrder = null;\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchOrderById.fulfilled, (state, action) => {\r\n                state.currentOrder = action.payload;\r\n                state.status = 'succeeded';\r\n            })\r\n            .addCase(fetchOrderById.rejected, (state, action) => {\r\n                state.currentOrder = null;\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n\r\n            .addCase(fetchOrders.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchOrders.fulfilled, (state, action) => {\r\n                state.orders = action.payload;\r\n                state.status = 'succeeded';\r\n            })\r\n            .addCase(fetchOrders.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            });\r\n    }\r\n});\r\n\r\nexport const ordersReducer = ordersSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}