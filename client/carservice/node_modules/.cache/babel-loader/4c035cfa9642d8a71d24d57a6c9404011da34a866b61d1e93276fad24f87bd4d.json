{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios'; // Предполагается, что здесь импортирован axios для HTTP-запросов\n\n// Асинхронные действия\nexport const fetchHazardousJobs = createAsyncThunk('hazardousJob/fetchHazardousJobs', async () => {\n  const {\n    data\n  } = await axios.get('/hazardousJob');\n  return data;\n});\nexport const createHazardousJob = createAsyncThunk('hazardousJob/createHazardousJob', async hazardousJobData => {\n  const {\n    data\n  } = await axios.post('/hazardousJob/create', hazardousJobData);\n  return data;\n});\nexport const updateHazardousJob = createAsyncThunk('hazardousJob/updateHazardousJob', async ({\n  id,\n  updatedData\n}) => {\n  const {\n    data\n  } = await axios.patch(`/hazardousJob/${id}/update`, updatedData);\n  return data;\n});\nexport const deleteHazardousJob = createAsyncThunk('hazardousJob/deleteHazardousJob', async id => {\n  await axios.delete(`/hazardousJob/${id}/delete`);\n  return id;\n});\nconst initialState = {\n  hazardousJobs: [],\n  status: 'idle',\n  error: null\n};\nconst hazardousJobsSlice = createSlice({\n  name: 'hazardousJob',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchHazardousJobs.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchHazardousJobs.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.hazardousJobs = action.payload;\n    }).addCase(fetchHazardousJobs.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createHazardousJob.fulfilled, (state, action) => {\n      state.hazardousJobs.push(action.payload);\n    }).addCase(updateHazardousJob.fulfilled, (state, action) => {\n      const index = state.hazardousJobs.findIndex(job => job._id === action.payload._id);\n      if (index !== -1) {\n        state.hazardousJobs[index] = action.payload;\n      }\n    }).addCase(deleteHazardousJob.fulfilled, (state, action) => {\n      state.hazardousJobs = state.hazardousJobs.filter(job => job._id !== action.payload);\n    });\n  }\n});\nexport const hazardousJobsReducer = hazardousJobsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchHazardousJobs","data","get","createHazardousJob","hazardousJobData","post","updateHazardousJob","id","updatedData","patch","deleteHazardousJob","delete","initialState","hazardousJobs","status","error","hazardousJobsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","job","_id","filter","hazardousJobsReducer","reducer"],"sources":["C:/Users/g_dra/Desktop/razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania/client/carservice/src/redux/slices/hazardousJob.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from '../axios'; // Предполагается, что здесь импортирован axios для HTTP-запросов\r\n\r\n// Асинхронные действия\r\nexport const fetchHazardousJobs = createAsyncThunk('hazardousJob/fetchHazardousJobs', async () => {\r\n    const { data } = await axios.get('/hazardousJob');\r\n    return data;\r\n});\r\n\r\nexport const createHazardousJob = createAsyncThunk('hazardousJob/createHazardousJob', async (hazardousJobData) => {\r\n    const { data } = await axios.post('/hazardousJob/create', hazardousJobData);\r\n    return data;\r\n});\r\n\r\nexport const updateHazardousJob = createAsyncThunk('hazardousJob/updateHazardousJob', async ({ id, updatedData }) => {\r\n    const { data } = await axios.patch(`/hazardousJob/${id}/update`, updatedData);\r\n    return data;\r\n});\r\n\r\nexport const deleteHazardousJob = createAsyncThunk('hazardousJob/deleteHazardousJob', async (id) => {\r\n    await axios.delete(`/hazardousJob/${id}/delete`);\r\n    return id;\r\n});\r\n\r\nconst initialState = {\r\n    hazardousJobs: [],\r\n    status: 'idle',\r\n    error: null\r\n};\r\n\r\nconst hazardousJobsSlice = createSlice({\r\n    name: 'hazardousJob',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHazardousJobs.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchHazardousJobs.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.hazardousJobs = action.payload;\r\n            })\r\n            .addCase(fetchHazardousJobs.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(createHazardousJob.fulfilled, (state, action) => {\r\n                state.hazardousJobs.push(action.payload);\r\n            })\r\n            .addCase(updateHazardousJob.fulfilled, (state, action) => {\r\n                const index = state.hazardousJobs.findIndex(job => job._id === action.payload._id);\r\n                if (index !== -1) {\r\n                    state.hazardousJobs[index] = action.payload;\r\n                }\r\n            })\r\n            .addCase(deleteHazardousJob.fulfilled, (state, action) => {\r\n                state.hazardousJobs = state.hazardousJobs.filter(job => job._id !== action.payload);\r\n            });\r\n    }\r\n});\r\n\r\nexport const hazardousJobsReducer = hazardousJobsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}