{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios';\n\n// Асинхронные действия\nexport const fetchEmployees = createAsyncThunk('employees/fetchEmployees', async () => {\n  const {\n    data\n  } = await axios.get('/employees');\n  return data;\n});\nexport const fetchEmployeeById = createAsyncThunk('employees/fetchEmployeeById', async id => {\n  const {\n    data\n  } = await axios.get(`/employees/${id}`);\n  return data;\n});\nexport const createEmployee = createAsyncThunk('employees/createEmployee', async employeeData => {\n  const {\n    data\n  } = await axios.post('/employees/create', employeeData);\n  return data;\n});\nexport const updateEmployee = createAsyncThunk('employees/updateEmployee', async ({\n  id,\n  updatedData\n}) => {\n  const {\n    data\n  } = await axios.patch(`/employees/${id}/update`, updatedData);\n  return data;\n});\nexport const deleteEmployee = createAsyncThunk('employees/deleteEmployee', async id => {\n  await axios.delete(`/employees/${id}/delete`);\n  return id;\n});\nconst initialState = {\n  employees: [],\n  currentEmployee: null,\n  status: 'idle',\n  error: null\n};\nconst employeesSlice = createSlice({\n  name: 'employees',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchEmployees.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchEmployees.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.employees = action.payload;\n    }).addCase(fetchEmployees.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchEmployeeById.pending, state => {\n      state.currentEmployee = null;\n      state.status = 'loading';\n    }).addCase(fetchEmployeeById.fulfilled, (state, action) => {\n      state.currentEmployee = action.payload;\n      state.status = 'succeeded';\n    }).addCase(fetchEmployeeById.rejected, (state, action) => {\n      state.currentEmployee = null;\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createEmployee.fulfilled, (state, action) => {\n      state.employees.push(action.payload);\n    }).addCase(updateEmployee.fulfilled, (state, action) => {\n      const index = state.employees.findIndex(employee => employee._id === action.payload._id);\n      if (index !== -1) {\n        state.employees[index] = action.payload;\n      }\n    }).addCase(deleteEmployee.fulfilled, (state, action) => {\n      state.employees = state.employees.filter(employee => employee._id !== action.payload);\n    });\n  }\n});\nexport const employeesReducer = employeesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchEmployees","data","get","fetchEmployeeById","id","createEmployee","employeeData","post","updateEmployee","updatedData","patch","deleteEmployee","delete","initialState","employees","currentEmployee","status","error","employeesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","employee","_id","filter","employeesReducer","reducer"],"sources":["C:/Users/g_dra/Desktop/razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania/client/carservice/src/redux/slices/employees.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from '../axios';\r\n\r\n// Асинхронные действия\r\nexport const fetchEmployees = createAsyncThunk('employees/fetchEmployees', async () => {\r\n    const { data } = await axios.get('/employees');\r\n    return data;\r\n});\r\n\r\nexport const fetchEmployeeById = createAsyncThunk('employees/fetchEmployeeById', async (id) => {\r\n    const { data } = await axios.get(`/employees/${id}`);\r\n    return data;\r\n});\r\n\r\nexport const createEmployee = createAsyncThunk('employees/createEmployee', async (employeeData) => {\r\n    const { data } = await axios.post('/employees/create', employeeData);\r\n    return data;\r\n});\r\n\r\nexport const updateEmployee = createAsyncThunk('employees/updateEmployee', async ({ id, updatedData }) => {\r\n    const { data } = await axios.patch(`/employees/${id}/update`, updatedData);\r\n    return data;\r\n});\r\n\r\nexport const deleteEmployee = createAsyncThunk('employees/deleteEmployee', async (id) => {\r\n    await axios.delete(`/employees/${id}/delete`);\r\n    return id;\r\n});\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    currentEmployee: null,\r\n    status: 'idle',\r\n    error: null\r\n};\r\n\r\nconst employeesSlice = createSlice({\r\n    name: 'employees',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchEmployees.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchEmployees.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.employees = action.payload;\r\n            })\r\n            .addCase(fetchEmployees.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(fetchEmployeeById.pending, (state) => {\r\n                state.currentEmployee = null;\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchEmployeeById.fulfilled, (state, action) => {\r\n                state.currentEmployee = action.payload;\r\n                state.status = 'succeeded';\r\n            })\r\n            .addCase(fetchEmployeeById.rejected, (state, action) => {\r\n                state.currentEmployee = null;\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            \r\n            .addCase(createEmployee.fulfilled, (state, action) => {\r\n                state.employees.push(action.payload);\r\n            })\r\n            .addCase(updateEmployee.fulfilled, (state, action) => {\r\n                const index = state.employees.findIndex(employee => employee._id === action.payload._id);\r\n                if (index !== -1) {\r\n                    state.employees[index] = action.payload;\r\n                }\r\n            })\r\n            .addCase(deleteEmployee.fulfilled, (state, action) => {\r\n                state.employees = state.employees.filter(employee => employee._id !== action.payload);\r\n            });\r\n    }\r\n});\r\n\r\nexport const employeesReducer = employeesSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}