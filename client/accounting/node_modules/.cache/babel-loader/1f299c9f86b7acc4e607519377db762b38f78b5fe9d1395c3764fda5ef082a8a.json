{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios';\nexport const fetchServices = createAsyncThunk('services/fetchServices', async () => {\n  const {\n    data\n  } = await axios.get('/services');\n  return data;\n});\nexport const fetchServicesById = createAsyncThunk('services/fetchServicesById', async id => {\n  const {\n    data\n  } = await axios.get(`/services/${id}`);\n  return data;\n});\nexport const createService = createAsyncThunk('services/createService', async serviceDate => {\n  const {\n    data\n  } = await axios.post('/services/create', serviceDate);\n  return data;\n});\nexport const updateService = createAsyncThunk('services/updateService', async ({\n  id,\n  updatedData\n}) => {\n  const {\n    data\n  } = await axios.patch(`/services/${id}/update`, updatedData);\n  return data;\n});\nexport const deleteService = createAsyncThunk('services/deleteService', async id => {\n  await axios.delete(`/services/${id}/delete`);\n  return id;\n});\nconst initialState = {\n  services: [],\n  currentService: null,\n  status: 'idle',\n  error: null\n};\nconst servicesSlice = createSlice({\n  name: 'services',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchServices.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchServices.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.services = action.payload;\n    }).addCase(fetchServices.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(fetchServicesById.pending, state => {\n      state.currentService = null;\n      state.status = 'loading';\n    }).addCase(fetchServicesById.fulfilled, (state, action) => {\n      state.currentService = action.payload;\n      state.status = 'succeeded';\n    }).addCase(fetchServicesById.rejected, (state, action) => {\n      state.currentService = null;\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createService.fulfilled, (state, action) => {\n      state.services.push(action.payload);\n    }).addCase(updateService.fulfilled, (state, action) => {\n      const index = state.services.findIndex(service => service._id === action.payload._id);\n      if (index !== -1) {\n        state.services[index] = action.payload;\n      }\n    }).addCase(deleteService.fulfilled, (state, action) => {\n      state.services = state.services.filter(service => service._id !== action.payload);\n    });\n  }\n});\nexport const servicesReducer = servicesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchServices","data","get","fetchServicesById","id","createService","serviceDate","post","updateService","updatedData","patch","deleteService","delete","initialState","services","currentService","status","error","servicesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","service","_id","filter","servicesReducer","reducer"],"sources":["C:/Users/g_dra/Desktop/razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania/client/carservice/src/redux/slices/services.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from '../axios';\r\n\r\nexport const fetchServices = createAsyncThunk('services/fetchServices', async () => {\r\n    const { data } = await axios.get('/services');\r\n    return data;\r\n});\r\n\r\nexport const fetchServicesById = createAsyncThunk('services/fetchServicesById', async (id) => {\r\n    const { data } = await axios.get(`/services/${id}`);\r\n    return data;\r\n});\r\n\r\nexport const createService = createAsyncThunk('services/createService', async (serviceDate) => {\r\n    const { data } = await axios.post('/services/create', serviceDate);\r\n    return data;\r\n});\r\n\r\nexport const updateService = createAsyncThunk('services/updateService', async ({ id, updatedData }) => {\r\n    const { data } = await axios.patch(`/services/${id}/update`, updatedData);\r\n    return data;\r\n});\r\n\r\nexport const deleteService = createAsyncThunk('services/deleteService', async (id) => {\r\n    await axios.delete(`/services/${id}/delete`);\r\n    return id;\r\n});\r\n\r\nconst initialState = {\r\n    services: [],\r\n    currentService: null,\r\n    status: 'idle',\r\n    error: null\r\n};\r\n\r\nconst servicesSlice = createSlice({\r\n    name: 'services',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchServices.pending, (state) => {\r\n            state.status = 'loading';\r\n        })\r\n        .addCase(fetchServices.fulfilled, (state, action) => {\r\n            state.status = 'succeeded';\r\n            state.services = action.payload;\r\n        })\r\n        .addCase(fetchServices.rejected, (state, action) => {\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        })\r\n        .addCase(fetchServicesById.pending, (state) => {\r\n            state.currentService = null;\r\n            state.status = 'loading';\r\n        })\r\n        .addCase(fetchServicesById.fulfilled, (state, action) => {\r\n            state.currentService = action.payload;\r\n            state.status = 'succeeded';\r\n        })\r\n        .addCase(fetchServicesById.rejected, (state, action) => {\r\n            state.currentService = null;\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        })\r\n\r\n        .addCase(createService.fulfilled, (state, action) => {\r\n            state.services.push(action.payload);\r\n        })\r\n        .addCase(updateService.fulfilled, (state, action) => {\r\n            const index = state.services.findIndex(service => service._id === action.payload._id);\r\n            if (index !== -1) {\r\n                state.services[index] = action.payload;\r\n            }\r\n        })\r\n        .addCase(deleteService.fulfilled, (state, action) => {\r\n            state.services = state.services.filter(service => service._id !== action.payload);\r\n        });\r\n    }\r\n});\r\n\r\nexport const servicesReducer = servicesSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}