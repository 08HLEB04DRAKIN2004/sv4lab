{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios';\n\n// Асинхронные действия\nexport const fetchEmployeeAccess = createAsyncThunk('employeeAccess/fetchEmployeeAccess', async () => {\n  const {\n    data\n  } = await axios.get('/employeeAccess');\n  return data;\n});\nexport const createEmployeeAccess = createAsyncThunk('employeeAccess/createEmployeeAccess', async employeeAccessData => {\n  const {\n    data\n  } = await axios.post('/employeeAccess/create', employeeAccessData);\n  return data;\n});\nexport const updateEmployeeAccess = createAsyncThunk('employeeAccess/updateEmployeeAccess', async ({\n  id,\n  updatedData\n}) => {\n  const {\n    data\n  } = await axios.patch(`/employeeAccess/${id}/update`, updatedData);\n  return data;\n});\nexport const deleteEmployeeAccess = createAsyncThunk('employeeAccess/deleteEmployeeAccess', async id => {\n  await axios.delete(`/employeeAccess/${id}/delete`);\n  return id;\n});\nconst initialState = {\n  employeeAccess: [],\n  status: 'idle',\n  error: null\n};\nconst employeeAccessSlice = createSlice({\n  name: 'employeeAccess',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchEmployeeAccess.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchEmployeeAccess.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.employeeAccess = action.payload;\n    }).addCase(fetchEmployeeAccess.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createEmployeeAccess.fulfilled, (state, action) => {\n      state.employeeAccess.push(action.payload);\n    }).addCase(updateEmployeeAccess.fulfilled, (state, action) => {\n      const index = state.employeeAccess.findIndex(access => access._id === action.payload._id);\n      if (index !== -1) {\n        state.employeeAccess[index] = action.payload;\n      }\n    }).addCase(deleteEmployeeAccess.fulfilled, (state, action) => {\n      state.employeeAccess = state.employeeAccess.filter(access => access._id !== action.payload);\n    });\n  }\n});\nexport const employeeAccessReducer = employeeAccessSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchEmployeeAccess","data","get","createEmployeeAccess","employeeAccessData","post","updateEmployeeAccess","id","updatedData","patch","deleteEmployeeAccess","delete","initialState","employeeAccess","status","error","employeeAccessSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","access","_id","filter","employeeAccessReducer","reducer"],"sources":["C:/Users/g_dra/Desktop/LABSSVZ/client/carservice/src/redux/slices/employeeAccess.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from '../axios';\r\n\r\n// Асинхронные действия\r\nexport const fetchEmployeeAccess = createAsyncThunk('employeeAccess/fetchEmployeeAccess', async () => {\r\n    const { data } = await axios.get('/employeeAccess');\r\n    return data;\r\n});\r\n\r\nexport const createEmployeeAccess = createAsyncThunk('employeeAccess/createEmployeeAccess', async (employeeAccessData) => {\r\n    const { data } = await axios.post('/employeeAccess/create', employeeAccessData);\r\n    return data;\r\n});\r\n\r\nexport const updateEmployeeAccess = createAsyncThunk('employeeAccess/updateEmployeeAccess', async ({ id, updatedData }) => {\r\n    const { data } = await axios.patch(`/employeeAccess/${id}/update`, updatedData);\r\n    return data;\r\n});\r\n\r\nexport const deleteEmployeeAccess = createAsyncThunk('employeeAccess/deleteEmployeeAccess', async (id) => {\r\n    await axios.delete(`/employeeAccess/${id}/delete`);\r\n    return id;\r\n});\r\n\r\nconst initialState = {\r\n    employeeAccess: [],\r\n    status: 'idle',\r\n    error: null\r\n};\r\n\r\nconst employeeAccessSlice = createSlice({\r\n    name: 'employeeAccess',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchEmployeeAccess.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchEmployeeAccess.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.employeeAccess = action.payload;\r\n            })\r\n            .addCase(fetchEmployeeAccess.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(createEmployeeAccess.fulfilled, (state, action) => {\r\n                state.employeeAccess.push(action.payload);\r\n            })\r\n            .addCase(updateEmployeeAccess.fulfilled, (state, action) => {\r\n                const index = state.employeeAccess.findIndex(access => access._id === action.payload._id);\r\n                if (index !== -1) {\r\n                    state.employeeAccess[index] = action.payload;\r\n                }\r\n            })\r\n            .addCase(deleteEmployeeAccess.fulfilled, (state, action) => {\r\n                state.employeeAccess = state.employeeAccess.filter(access => access._id !== action.payload);\r\n            });\r\n    }\r\n});\r\n\r\nexport const employeeAccessReducer = employeeAccessSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}