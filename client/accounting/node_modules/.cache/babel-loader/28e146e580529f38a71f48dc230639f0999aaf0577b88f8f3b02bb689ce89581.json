{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\g_dra\\\\Desktop\\\\razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania\\\\client\\\\carservice\\\\src\\\\components\\\\employee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchDepartments } from '../redux/slices/department'; // Импортируем нужный thunk для загрузки данных отделов\nimport { Grid, Card, CardContent, Typography, CardMedia } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const departments = useSelector(state => state.departments.departments); // Получаем данные о отделах из хранилища\n  const loading = useSelector(state => state.departments.status) === 'loading'; // Проверяем статус загрузки\n\n  useEffect(() => {\n    dispatch(fetchDepartments()); // Запускаем загрузку данных об отделах при монтировании компонента\n  }, [dispatch]);\n  if (loading) {\n    // Если данные загружаются, показываем сообщение о загрузке\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u041D\\u0430\\u0448\\u0438 \\u043E\\u0442\\u0434\\u0435\\u043B\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: departments.map(department =>\n      /*#__PURE__*/\n      // Отображаем каждый отдел\n      _jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: department.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: department.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, department._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(DepartmentPage, \"MNEhP8zZfgUrtk6yFP8Y2/tq2BY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = DepartmentPage;\nexport default DepartmentPage;\nvar _c;\n$RefreshReg$(_c, \"DepartmentPage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchDepartments","Grid","Card","CardContent","Typography","CardMedia","jsxDEV","_jsxDEV","DepartmentPage","_s","dispatch","departments","state","loading","status","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","container","spacing","map","department","item","xs","sm","md","name","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/g_dra/Desktop/razrabotka_web_prilozenia_dlya_stancii_tehnicheskogo_obsluzhivania/client/carservice/src/components/employee.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDepartments } from '../redux/slices/department'; // Импортируем нужный thunk для загрузки данных отделов\r\nimport { Grid, Card, CardContent, Typography, CardMedia } from '@mui/material';\r\n\r\nconst DepartmentPage = () => {\r\n    const dispatch = useDispatch();\r\n    const departments = useSelector(state => state.departments.departments); // Получаем данные о отделах из хранилища\r\n    const loading = useSelector(state => state.departments.status) === 'loading'; // Проверяем статус загрузки\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDepartments()); // Запускаем загрузку данных об отделах при монтировании компонента\r\n    }, [dispatch]);\r\n\r\n    if (loading) { // Если данные загружаются, показываем сообщение о загрузке\r\n        return <Typography>Loading...</Typography>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Наши отделы\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {departments.map(department => ( // Отображаем каждый отдел\r\n                    <Grid item key={department._id} xs={12} sm={6} md={4}>\r\n                        <Card>\r\n                            {/* Здесь могут быть изображение, информация о отделе и т.д. */}\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\">{department.name}</Typography>\r\n                                <Typography variant=\"body1\">{department.description}</Typography>\r\n                                {/* Пример: Здесь может быть другая информация о отделе */}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,4BAA4B,CAAC,CAAC;AAC/D,SAASC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,WAAW,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,WAAW,CAACA,WAAW,CAAC,CAAC,CAAC;EACzE,MAAME,OAAO,GAAGd,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,WAAW,CAACG,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC;;EAE9EjB,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACV,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,IAAIG,OAAO,EAAE;IAAE;IACX,oBAAON,OAAA,CAACH,UAAU;MAAAW,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAC9C;EAEA,oBACIZ,OAAA;IAAAQ,QAAA,gBACIR,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAN,QAAA,EAAC;IAEtC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbZ,OAAA,CAACN,IAAI;MAACqB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACtBJ,WAAW,CAACa,GAAG,CAACC,UAAU;MAAA;MAAM;MAC7BlB,OAAA,CAACN,IAAI;QAACyB,IAAI;QAAsBC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACjDR,OAAA,CAACL,IAAI;UAAAa,QAAA,eAEDR,OAAA,CAACJ,WAAW;YAAAY,QAAA,gBACRR,OAAA,CAACH,UAAU;cAACgB,OAAO,EAAC,IAAI;cAAAL,QAAA,EAAEU,UAAU,CAACK;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACvDZ,OAAA,CAACH,UAAU;cAACgB,OAAO,EAAC,OAAO;cAAAL,QAAA,EAAEU,UAAU,CAACM;YAAW;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC,GARKM,UAAU,CAACO,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASxB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACV,EAAA,CAlCID,cAAc;EAAA,QACCV,WAAW,EACRC,WAAW,EACfA,WAAW;AAAA;AAAAkC,EAAA,GAHzBzB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}